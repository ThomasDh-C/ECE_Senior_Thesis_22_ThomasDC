#[version = "0.0.5"]
def @main(%x: Tensor[(1, 3, 30, 30), float32], %y: Tensor[(3, 3, 3, 3), float32]) -> Tensor[(1, 3, 28, 28), float32] {
  @tvmgen_default_ilacnn_main_0(%x, %y) /* ty=Tensor[(1, 3, 28, 28), float32] */
}

def @tvmgen_default_ilacnn_main_0(%ilacnn_0_i0: Tensor[(1, 3, 30, 30), float32], %ilacnn_0_i1: Tensor[(3, 3, 3, 3), float32], Inline=1, Compiler="ilacnn", global_symbol="tvmgen_default_ilacnn_main_0", Primitive=1) -> Tensor[(1, 3, 28, 28), float32] {
  %0 = fn (%FunctionVar_0_0: Tensor[(1, 3, 30, 30), float32], %FunctionVar_0_1: Tensor[(3, 3, 3, 3), float32], PartitionedFromPattern="nn.conv2d_", Composite="ilacnn.conv2d") -> Tensor[(1, 3, 28, 28), float32] {
    nn.conv2d(%FunctionVar_0_0, %FunctionVar_0_1, padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 3, 28, 28), float32] */
  };
  %0(%ilacnn_0_i0, %ilacnn_0_i1) /* ty=Tensor[(1, 3, 28, 28), float32] */
}

